# Generated by Django 5.2.5 on 2025-08-24 12:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='教室名称/编号')),
                ('capacity', models.PositiveIntegerField(verbose_name='容纳人数')),
                ('is_active', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '教室',
                'verbose_name_plural': '教室',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(max_length=254, verbose_name='收件人邮箱')),
                ('recipient_type', models.CharField(choices=[('student', '学生'), ('staff', '员工'), ('guardian', '监护人')], max_length=20, verbose_name='收件人类型')),
                ('subject', models.CharField(max_length=200, verbose_name='邮件主题')),
                ('content', models.TextField(verbose_name='邮件正文')),
                ('email_type', models.CharField(choices=[('welcome', '欢迎邮件'), ('enrollment_confirm', '报名确认'), ('attendance_notice', '考勤通知'), ('course_reminder', '课程提醒')], max_length=30, verbose_name='邮件类型')),
                ('status', models.CharField(choices=[('sent', '已发送'), ('failed', '发送失败')], default='sent', max_length=20, verbose_name='发送状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '邮件日志',
                'verbose_name_plural': '邮件日志',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='设施名称')),
                ('address', models.TextField(verbose_name='地址')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='联系电话')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('is_active', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '设施',
                'verbose_name_plural': '设施',
            },
        ),
        migrations.CreateModel(
            name='SMSLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_phone', models.CharField(max_length=20, verbose_name='收件人手机')),
                ('recipient_type', models.CharField(choices=[('student', '学生'), ('staff', '员工'), ('guardian', '监护人')], max_length=20, verbose_name='收件人类型')),
                ('content', models.TextField(verbose_name='短信内容')),
                ('sms_type', models.CharField(choices=[('welcome', '欢迎短信'), ('enrollment_confirm', '报名确认'), ('attendance_notice', '考勤通知'), ('course_reminder', '课程提醒')], max_length=30, verbose_name='短信类型')),
                ('status', models.CharField(choices=[('sent', '已发送'), ('failed', '发送失败')], default='sent', max_length=20, verbose_name='发送状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '短信日志',
                'verbose_name_plural': '短信日志',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='名')),
                ('last_name', models.CharField(max_length=50, verbose_name='姓')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='邮箱')),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', '请输入有效的手机号码')], verbose_name='手机号码')),
                ('address', models.TextField(blank=True, verbose_name='地址')),
                ('guardian_name', models.CharField(blank=True, max_length=100, verbose_name='监护人姓名')),
                ('guardian_phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', '请输入有效的手机号码')], verbose_name='监护人电话')),
                ('guardian_email', models.EmailField(blank=True, max_length=254, verbose_name='监护人邮箱')),
                ('reference', models.CharField(blank=True, max_length=100, verbose_name='推荐人')),
                ('is_active', models.BooleanField(default=True, verbose_name='学生状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', '请输入有效的手机号码')], verbose_name='手机号码')),
                ('role', models.CharField(choices=[('admin', '管理员'), ('teacher', '教师')], default='teacher', max_length=20, verbose_name='角色')),
                ('is_active_staff', models.BooleanField(default=True, verbose_name='员工状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工',
                'verbose_name_plural': '员工',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClockInOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('clock_in', '上班打卡'), ('clock_out', '下班打卡')], max_length=20, verbose_name='打卡状态')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='打卡时间')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='纬度')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='经度')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clock_records', to=settings.AUTH_USER_MODEL, verbose_name='员工')),
            ],
            options={
                'verbose_name': '打卡记录',
                'verbose_name_plural': '打卡记录',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='课程名称')),
                ('description', models.TextField(blank=True, verbose_name='课程描述')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='价格')),
                ('course_type', models.CharField(choices=[('group', '团体课'), ('private', '私教课')], default='group', max_length=20, verbose_name='课程类型')),
                ('start_date', models.DateField(verbose_name='开始日期')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='结束日期')),
                ('repeat_pattern', models.CharField(choices=[('once', '单次'), ('daily', '每日'), ('weekly', '每周'), ('monthly', '每月')], default='once', max_length=20, verbose_name='重复模式')),
                ('start_time', models.TimeField(verbose_name='开始时间')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='课程时长(分钟)')),
                ('vacancy', models.PositiveIntegerField(default=1, verbose_name='空缺名额')),
                ('is_bookable', models.BooleanField(default=True, verbose_name='是否可预订')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='外部系统ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.classroom', verbose_name='教室')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to=settings.AUTH_USER_MODEL, verbose_name='授课教师')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.facility', verbose_name='设施')),
            ],
            options={
                'verbose_name': '课程',
                'verbose_name_plural': '课程',
            },
        ),
        migrations.AddField(
            model_name='classroom',
            name='facility',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classrooms', to='core.facility', verbose_name='所属设施'),
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='上课日期')),
                ('start_time', models.TimeField(verbose_name='开始时间')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='课程时长(分钟)')),
                ('is_active', models.BooleanField(default=True, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='授课教师')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.classroom', verbose_name='教室')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='core.course', verbose_name='所属课程')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.facility', verbose_name='设施')),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级',
                'unique_together': {('course', 'date', 'start_time')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='classroom',
            unique_together={('facility', 'name')},
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('confirmed', '已确认'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('source_channel', models.CharField(choices=[('website', '网站'), ('form', '报名表'), ('staff', '工作人员')], default='website', max_length=20, verbose_name='报名来源')),
                ('form_data', models.JSONField(blank=True, null=True, verbose_name='报名表数据')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='报名时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.course', verbose_name='课程')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='core.student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '报名记录',
                'verbose_name_plural': '报名记录',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('present', '出席'), ('absent', '缺席'), ('late', '迟到'), ('early_leave', '早退')], default='present', max_length=20, verbose_name='考勤状态')),
                ('attendance_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='考勤时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='记录时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('class_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='core.class', verbose_name='班级')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='core.student', verbose_name='学生')),
            ],
            options={
                'verbose_name': '考勤记录',
                'verbose_name_plural': '考勤记录',
                'unique_together': {('student', 'class_instance')},
            },
        ),
    ]
